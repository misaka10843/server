//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

use super::sea_orm_active_enums::{DatePrecision, ReleaseType};

#[derive(
    Clone,
    Debug,
    PartialEq,
    DeriveEntityModel,
    Eq,
    Serialize,
    Deserialize,
    juniper :: GraphQLObject,
)]
#[sea_orm(table_name = "release_history")]
# [graphql (scalar = crate :: extension :: GqlScalarValue)]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    pub release_type: ReleaseType,
    pub release_date: Option<Date>,
    pub release_date_precision: DatePrecision,
    pub recording_date_start: Option<Date>,
    pub recording_date_start_precision: DatePrecision,
    pub recording_date_end: Option<Date>,
    pub recording_date_end_precision: DatePrecision,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::release_credit_history::Entity")]
    ReleaseCreditHistory,
}

impl Related<super::release_credit_history::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ReleaseCreditHistory.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
