//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "ArtistType")]
pub enum ArtistType {
    #[sea_orm(string_value = "Multiple")]
    Multiple,
    #[sea_orm(string_value = "Solo")]
    Solo,
    #[sea_orm(string_value = "Unknown")]
    Unknown,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ChangeRequestStatus"
)]
pub enum ChangeRequestStatus {
    #[sea_orm(string_value = "Approved")]
    Approved,
    #[sea_orm(string_value = "Pending")]
    Pending,
    #[sea_orm(string_value = "Rejected")]
    Rejected,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ChangeRequestType"
)]
pub enum ChangeRequestType {
    #[sea_orm(string_value = "Create")]
    Create,
    #[sea_orm(string_value = "Delete")]
    Delete,
    #[sea_orm(string_value = "Update")]
    Update,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "ChangeRequestUserType"
)]
pub enum ChangeRequestUserType {
    #[sea_orm(string_value = "Approver")]
    Approver,
    #[sea_orm(string_value = "Author")]
    Author,
    #[sea_orm(string_value = "Co-Author")]
    CoAuthor,
    #[sea_orm(string_value = "Reviewer")]
    Reviewer,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "DatePrecision")]
pub enum DatePrecision {
    #[sea_orm(string_value = "Day")]
    Day,
    #[sea_orm(string_value = "Month")]
    Month,
    #[sea_orm(string_value = "Year")]
    Year,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "EntityType")]
pub enum EntityType {
    #[sea_orm(string_value = "Artist")]
    Artist,
    #[sea_orm(string_value = "Label")]
    Label,
    #[sea_orm(string_value = "Release")]
    Release,
    #[sea_orm(string_value = "Song")]
    Song,
    #[sea_orm(string_value = "Tag")]
    Tag,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "MediaPlatform")]
pub enum MediaPlatform {
    #[sea_orm(string_value = "Bluesky")]
    Bluesky,
    #[sea_orm(string_value = "Weibo")]
    Weibo,
    #[sea_orm(string_value = "X")]
    X,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "ReleaseType")]
pub enum ReleaseType {
    #[sea_orm(string_value = "Album")]
    Album,
    #[sea_orm(string_value = "Compilation")]
    Compilation,
    #[sea_orm(string_value = "Demo")]
    Demo,
    #[sea_orm(string_value = "EP")]
    Ep,
    #[sea_orm(string_value = "Other")]
    Other,
    #[sea_orm(string_value = "Single")]
    Single,
}
#[derive(
    Debug,
    Clone,
    PartialEq,
    Eq,
    EnumIter,
    DeriveActiveEnum,
    Serialize,
    Deserialize,
)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "TagKind")]
pub enum TagKind {
    #[sea_orm(string_value = "Descriptor")]
    Descriptor,
    #[sea_orm(string_value = "Form")]
    Form,
    #[sea_orm(string_value = "Genre")]
    Genre,
    #[sea_orm(string_value = "Scene")]
    Scene,
}
