//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize,
)]
#[sea_orm(table_name = "group_member_join_leave")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub group_member_id: i32,
    pub join_year: Option<i16>,
    pub leave_year: Option<i16>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::group_member::Entity",
        from = "Column::GroupMemberId",
        to = "super::group_member::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    GroupMember,
}

impl Related<super::group_member::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GroupMember.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
