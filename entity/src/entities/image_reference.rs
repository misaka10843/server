//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

use super::sea_orm_active_enums::ImageRefEntityType;

#[derive(
    Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize,
)]
#[sea_orm(table_name = "image_reference")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub image_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub ref_entity_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub ref_entity_type: ImageRefEntityType,
    #[sea_orm(column_type = "Text", nullable)]
    pub ref_usage: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::image::Entity",
        from = "Column::ImageId",
        to = "super::image::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Image,
}

impl Related<super::image::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Image.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
