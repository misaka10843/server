version: '3.8'

services:
  db:
    image: postgres:17-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-appuser}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-appuser} -d ${POSTGRES_DB:-appdb}"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  redis:  # 添加 Redis 容器
    image: redis:7-alpine
    restart: always
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    networks:
      - backend

  app:
    build:
      context: .
      target: production
    # image: touhou-music-server
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SESSION_SECURE: ${SESSION_SECURE:-false}
      ADMIN_PASSWORD: "${ADMIN_PASSWORD:-changeme}"

      DATABASE_URL: "postgres://${POSTGRES_USER:-appuser}:${POSTGRES_PASSWORD:-appuser}@db:5432/${POSTGRES_DB:-appdb}"
      REDIS_URL: "redis://redis:6379"
    ports:
      - "12345:12345"
    networks:
      - backend

networks:
  backend:

volumes:
  pgdata:
  redisdata: